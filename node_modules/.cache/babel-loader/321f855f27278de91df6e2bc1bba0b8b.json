{"ast":null,"code":"var _jsxFileName = \"/home/maryam/Documents/vscode/NFT_Marketplace/src/frontend/components/NFTList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport { Row, Col, Card, Button, Nav } from 'react-bootstrap';\nimport { items } from './Generate.js';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar itemImags = [];\n\nconst NFTList = _ref => {\n  _s();\n\n  let {\n    marketplace,\n    nft\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [items, setItems] = useState([]);\n  const uri = `http://127.0.0.1:5000/get-nftresults`;\n  useEffect(() => {}, []);\n  useEffect(() => {\n    fetch(\"https://dog.ceo/api/breeds/image/random\").then(response => response.json()) // 4. Setting *dogImage* to the image url that we received from the response above\n    .then(data => setDogImage(data.message));\n    fetch(uri).then(response => response.json()).then(data => setItems(data.items));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        lg: 4,\n        className: \"g-4 py-5\",\n        children: items.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              color: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => listNFTImage(item),\n                  variant: \"primary\",\n                  size: \"lg\",\n                  children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n                    as: Link,\n                    to: \"/create\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 25\n                  }, this), \" List!\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: \"1rem 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No listed NFT Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NFTList, \"i4zzq9buJfjZB1ukVdLDlRPRdMg=\");\n\n_c = NFTList;\nexport default NFTList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NFTList\");","map":{"version":3,"sources":["/home/maryam/Documents/vscode/NFT_Marketplace/src/frontend/components/NFTList.js"],"names":["React","useState","useEffect","ethers","Row","Col","Card","Button","Nav","items","Link","itemImags","NFTList","marketplace","nft","loading","setLoading","setItems","uri","fetch","then","response","json","data","setDogImage","message","length","map","item","idx","address","name","listNFTImage","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card, Button, Nav } from 'react-bootstrap'\nimport {items} from './Generate.js';\nimport {  Link} from \"react-router-dom\";\n\nvar itemImags = []\n\nconst NFTList = ({ marketplace, nft }) => {\n  const [loading, setLoading] = useState(true)\n  const [items, setItems] = useState([])\n\n  const uri = `http://127.0.0.1:5000/get-nftresults`\n  useEffect(() => {\n\n  },[])\n  \n    useEffect(() => {\n      fetch(\"https://dog.ceo/api/breeds/image/random\")\n      .then(response => response.json())\n          // 4. Setting *dogImage* to the image url that we received from the response above\n      .then(data => setDogImage(data.message))\n\n\n      fetch(uri)\n      .then(response => response.json())\n      .then(data => setItems(data.items));\n    },[])\n\n  return (\n    <div className=\"flex justify-center\">\n        {items.length > 0 ?\n          <div className=\"px-5 container\">\n            <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n              {items.map((item, idx) => (\n                <Col key={idx} className=\"overflow-hidden\">\n                  <Card>\n                    <Card.Img variant=\"top\" src={item.address} />\n                    <Card.Body color=\"secondary\">\n                      <Card.Title>{item.name}</Card.Title>\n                    </Card.Body>\n                    <Card.Footer>\n                      <div className='d-grid'>\n                        <Button onClick={() => listNFTImage(item)} variant=\"primary\" size=\"lg\">\n                        <Nav.Link as={Link} to=\"/create\"></Nav.Link> List!\n                        </Button>\n                      </div>\n                    </Card.Footer>\n                  </Card>\n                </Col>\n              ))}\n            </Row>\n          </div>\n          : (\n            <main style={{ padding: \"1rem 0\" }}>\n              <h2>No listed NFT Images</h2>\n            </main>\n          )}\n      </div>\n  );\n}\nexport default NFTList"]},"metadata":{},"sourceType":"module"}