{"ast":null,"code":"var _jsxFileName = \"/home/maryam/Documents/vscode/NFT_Marketplace/src/frontend/components/NFTList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport { items } from './button.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NFTList = _ref => {\n  _s();\n\n  let {\n    marketplace,\n    nft\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [items, setItems] = useState([]);\n\n  const loadNFTImages = async () => {\n    // Load all unsold items\n    const r = \"/home/maryam/Documents/vscode/NFT-Generator-Python/images/results\";\n    const items = importAll(require.context(r, false, /\\.(png)$/));\n    setLoading(false);\n    setItems(items);\n  };\n\n  function importAll(r) {\n    let images = {};\n    r.keys().map((item, index) => {\n      images[item.replace('./', '')] = r(item);\n    });\n    return images;\n  }\n\n  const listNFTImage = async item => {//await (await marketplace.purchaseItem(item.itemId, { value: item.totalPrice })).wait()\n    //loadMarketplaceItems()\n  };\n\n  useEffect(() => {\n    loadNFTImages();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem 0\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        lg: 4,\n        className: \"g-4 py-5\",\n        children: items.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => listNFTImage(item),\n                  variant: \"primary\",\n                  size: \"lg\",\n                  children: \"List NFT Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: \"1rem 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No listed NFT Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NFTList, \"X4x04bf2XOIdWC9JIzBW7u2/seA=\");\n\n_c = NFTList;\nexport default NFTList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NFTList\");","map":{"version":3,"sources":["/home/maryam/Documents/vscode/NFT_Marketplace/src/frontend/components/NFTList.js"],"names":["React","useState","useEffect","ethers","Row","Col","Card","Button","items","NFTList","marketplace","nft","loading","setLoading","setItems","loadNFTImages","r","importAll","require","context","images","keys","map","item","index","replace","listNFTImage","padding","length","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card, Button } from 'react-bootstrap'\nimport {items} from './button.js';\n\n\nconst NFTList = ({ marketplace, nft }) => {\n  const [loading, setLoading] = useState(true)\n  const [items, setItems] = useState([])\n\n  const loadNFTImages = async () => {\n    // Load all unsold items\n    \n    const r = \"/home/maryam/Documents/vscode/NFT-Generator-Python/images/results\"\n    const items = importAll(require.context(r, false, /\\.(png)$/));\n\n    setLoading(false)\n    setItems(items)\n    }\n\n    function importAll(r) {\n      let images = {};\n      r.keys().map((item, index) => { images[item.replace('./', '')] = r(item); });\n      return images;\n    }\n\n  const listNFTImage = async (item) => {\n    //await (await marketplace.purchaseItem(item.itemId, { value: item.totalPrice })).wait()\n    //loadMarketplaceItems()\n  }\n\n  useEffect(() => {\n    loadNFTImages()\n  }, [])\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      {items.length > 0 ?\n        <div className=\"px-5 container\">\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n            {items.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item} />\n                  <Card.Footer>\n                    <div className='d-grid'>\n                      <Button onClick={() => listNFTImage(item)} variant=\"primary\" size=\"lg\">\n                        List NFT Image \n                      </Button>\n                    </div>\n                  </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No listed NFT Images</h2>\n          </main>\n        )}\n    </div>\n  );\n}\nexport default NFTList"]},"metadata":{},"sourceType":"module"}